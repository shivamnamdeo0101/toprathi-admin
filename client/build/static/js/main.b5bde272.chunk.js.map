{"version":3,"sources":["components/routing/PrivateRoute.js","store/UserSlice.js","components/dashboard/LeftSideBar.js","components/dashboard/HeaderComp.js","utils/endPoint.js","service/api/NewsService.js","components/Loading.js","components/dashboard/DashboardComp.js","components/screens/PrivateScreen.js","components/screens/LoginScreen.js","components/screens/RegisterScreen.js","service/api/UserService.js","components/screens/ForgotPasswordScreen.js","components/screens/ResetPasswordScreen.js","components/dashboard/AddPostComp.js","components/screens/AddPostScreen.js","components/dashboard/AddSliderComp.js","components/screens/AddSliderScreen.js","components/dashboard/EditPostComp.js","components/screens/EditPostScreen.js","components/screens/EmailVerifyScreen.js","App.js","reportWebVitals.js","store/RootReducer.js","service/saga/userSaga.js","service/saga/RootSaga.js","index.js"],"names":["PrivateRoute","Component","component","rest","user","useLocation","useSelector","state","userAuth","render","props","Object","keys","length","to","initialState","isLoading","isSuccess","errMsg","UserSlice","createSlice","name","reducers","getAuthFetch","action","getAuthSuccess","setUserDetails","payload","getAuthFailure","flushAuthData","localStorage","clear","actions","LeftSideBar","history","useHistory","className","onClick","push","HeaderComp","dispatch","useDispatch","email","endPoint","newsGet","page","perPage","axios","request","method","url","then","res","data","catch","error","response","newsGetById","newsId","remNewsGetById","newsAdd","newsEdit","Loading","DashboardComp","NewsService","useState","list","setList","loading","setloading","count","setcount","setpage","useEffect","items","console","log","remNews","window","confirm","alert","Math","ceil","map","item","index","src","image","title","substring","content","moment","timestamp","fromNow","_id","PrivateScreen","LoginScreen","setEmail","password","setPassword","setError","loginHandler","e","preventDefault","setTimeout","onSubmit","htmlFor","type","required","id","placeholder","onChange","target","value","tabIndex","autoComplete","RegisterScreen","username","setUsername","confirmpassword","setConfirmPassword","registerHandler","config","header","post","setItem","token","userLoginApi","userForgotPassword","JSON","stringify","headers","userFetch","userResetPassword","resetToken","userEmailVerify","ForgotPasswordScreen","success","setSuccess","UserService","forgotPasswordHandler","ResetPasswordScreen","match","confirmPassword","useParams","resetPasswordHandler","AddPostComp","tags","settags","useForm","control","register","handleSubmit","reset","watch","getValues","setValue","errors","formState","temp_image_link","settemp_image_link","useFieldArray","fields","append","remove","EditNewsFun","subscription","unsubscribe","watchAllFields","form_link","read_more_link","Date","now","poll_title","news_type","style","width","height","marginBottom","defaultValue","options","label","isMulti","isSearchable","AddPostScreen","AddSliderComp","AddSliderScreen","EditPostComp","setimage","news_data","setnews_data","defaultValues","insight_arr","EditPostScreen","EmailVerifyScreen","emailToken","Error","verify","App","interceptors","use","Authorization","Promise","reject","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","persistConfig","key","storage","version","whitelist","persistedReducer","persistReducer","workerGetUserFetch","userSaga","PutUserData","call","put","takeEvery","rootSaga","spawn","saga","createSagaMiddleware","store","configureStore","reducer","devTools","middleware","run","ReactDOM","persistor","persistStore","document","getElementById"],"mappings":"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","file":"static/js/main.b5bde272.chunk.js","sourcesContent":["import { useLocation, Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const location = useLocation();\r\n  const user = useSelector((state) => state.userAuth.user);\r\n  \r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        Object.keys(user).length !==0 ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nconst initialState = {\r\n  user: {},\r\n  isLoading: false,\r\n  isSuccess: false,\r\n  errMsg: '',\r\n};\r\nexport const UserSlice = createSlice({\r\n  name: 'user',\r\n  initialState: initialState,\r\n  reducers: {\r\n    getAuthFetch:(state,action)=>{\r\n      state.isLoading = true;\r\n    },\r\n    getAuthSuccess: (state) => {\r\n      state.isLoading = false;\r\n      state.isSuccess = true;\r\n    },\r\n    setUserDetails: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    getAuthFailure: (state, action) => {\r\n      state.isLoading = false;\r\n      state.errMsg = action?.payload;\r\n    },\r\n    flushAuthData: (state) => {\r\n      localStorage.clear();\r\n      \r\n      return initialState;\r\n    },\r\n  },\r\n});\r\nexport const { setUserDetails, flushAuthData,getAuthFetch,getAuthSuccess } = UserSlice.actions;\r\n\r\nexport default UserSlice.reducer;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction LeftSideBar() {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className='left_side_bar'>\r\n\r\n        <div className='left_side_menu'>\r\n          <div className='left_side_menu_comp' onClick={()=>history.push(\"/\")}>\r\n            <h6>Dashboard</h6>\r\n          </div>\r\n          <div className='left_side_menu_comp' onClick={()=>history.push(\"/add-post\")}>\r\n            <h6>Add Article</h6>\r\n          </div>\r\n          <div className='left_side_menu_comp' onClick={()=>history.push(\"/add-slide\")}>\r\n            <h6>Add Slide</h6>\r\n          </div>\r\n          <div className='left_side_menu_comp' onClick={()=>history.push(\"/articles\")}>\r\n            <h6>Articles</h6>\r\n          </div>\r\n          <div className='left_side_menu_comp'>\r\n            <h6>Slider</h6>\r\n          </div>\r\n          <div className='left_side_menu_comp'>\r\n            <h6>Others</h6>\r\n          </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LeftSideBar","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { flushAuthData } from '../../store/UserSlice';\r\n\r\nfunction HeaderComp() {\r\n   const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(state=>state.userAuth.user);\r\n  const logout = ()=>{\r\n    dispatch(flushAuthData());\r\n    history.push(\"/login\");\r\n  }\r\n  \r\n  return (\r\n    <div className=\"dashboard_header\">\r\n        <h2>Dashboard</h2>\r\n\r\n        <div className='right_header'>\r\n            <h3>{user?.user?.email}</h3>\r\n            <button onClick={()=>logout()}> Logout</button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HeaderComp","export const endPoint = 'https://toprathi-admin.onrender.com/api/';","import axios from 'axios';\r\nimport { endPoint } from '../../utils/endPoint';\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n\r\n  newsGet: async function (page, perPage) {\r\n    return axios.request({\r\n      method: 'get',\r\n      url: `${endPoint}private/news-admin/${page}/${perPage}`,\r\n    })\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .catch((error) => {\r\n        return error.response;\r\n      });\r\n  },\r\n  newsGetById: async function (newsId) {\r\n    return axios.request({\r\n      method: 'get',\r\n      url: `${endPoint}private/news/${newsId}`,\r\n    })\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .catch((error) => {\r\n        return error.response;\r\n      });\r\n  },\r\n  remNewsGetById: async function (newsId) {\r\n    return axios.request({\r\n      method: 'delete',\r\n      url: `${endPoint}private/news/${newsId}`,\r\n    })\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .catch((error) => {\r\n        return error.response;\r\n      });\r\n  },\r\n\r\n  newsAdd: async function (payload) {\r\n    return axios.request({\r\n      method: 'post',\r\n      url: `${endPoint}private/news`,\r\n      data: payload,\r\n    })\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .catch((error) => {\r\n        return error.response;\r\n      });\r\n  },\r\n  newsEdit: async function (payload, newsId) {\r\n    return axios.request({\r\n      method: 'put',\r\n      url: `${endPoint}private/news/${newsId}`,\r\n      data: payload,\r\n    })\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .catch((error) => {\r\n        return error.response;\r\n      });\r\n  }\r\n\r\n};","import React from 'react'\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div>\r\n        <p>Loading...</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading","import moment from 'moment';\r\nimport React,{useState,useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport NewsService from '../../service/api/NewsService';\r\nimport Loading from '../Loading';\r\n\r\nfunction DashboardComp() {\r\n    const history = useHistory();\r\n    const {newsGet,remNewsGetById} = NewsService;\r\n    const [list, setList] = useState([]);\r\n    const [loading, setloading] = useState(true);\r\n    const [count, setcount] = useState(0);\r\n    const [page, setpage] = useState(1)\r\n\r\n    useEffect(() => {\r\n        newsGet(page,5)\r\n        .then(items => {\r\n            setList(items.data)\r\n            setcount(items.count)\r\n            \r\n            console.log(items)\r\n            setloading(false);\r\n        })\r\n        \r\n      }, [loading,page])\r\n\r\n\r\n    const remNews = async (newsId)=>{\r\n\r\n        if(window.confirm(\"Are you to delete this news\")){\r\n            setloading(true)\r\n            const res = await remNewsGetById(newsId);\r\n            alert(\"Post Deleted...\")\r\n            setloading(false);\r\n        }\r\n       \r\n\r\n    }\r\n    const prevPage = ()=>{\r\n        if(page>1){\r\n            setpage(page-1)\r\n        }\r\n        \r\n    }\r\n    const nextPage = ()=>{\r\n        if(Math.ceil(count/5) > page){\r\n            setpage(page+1)\r\n        }\r\n        \r\n    }\r\n\r\n    if(loading){\r\n        return<Loading />\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <div className='dashboard_comp_header'>\r\n                <h2>Top Articles</h2>\r\n                <div>    \r\n                    \r\n                <p><button onClick={()=>prevPage()}>Prev</button>{page} / {Math.ceil(count/5)} <button onClick={()=>nextPage()}>Next</button></p> </div>\r\n                   \r\n            </div>\r\n\r\n            <div className='dashboard_articles'>\r\n                {list.map((item,index=0) =>\r\n                    <div className='dashboard_articles_comp' key={index} >\r\n                        <div className='articles_comp_first'>\r\n                            <div className='dashboard_articles_comp_left articles_comp'>\r\n                                <p>{(index+1) + ((page-1) * 5)} </p>\r\n                            </div>\r\n                            <div className='dashboard_articles_comp_center articles_comp'>\r\n                                <img src={item.image}/>\r\n                            </div>\r\n                            <div className='articles_content articles_comp'>\r\n                                <h5>{item?.title.length > 50 ? item?.title?.substring(0,50) : item?.title}</h5>\r\n                                <h5>{item?.content.length > 50 ? item?.content?.substring(0,50) : item?.content}</h5>\r\n                                <p>{moment(item.timestamp).fromNow()}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='articles_action'>\r\n                            <p onClick={()=>history.push(\"/edit-post/\"+item._id)}>Edit</p>\r\n                            <p onClick={()=>remNews(item._id)}>Delete</p>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                )}\r\n\r\n               \r\n\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardComp","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./PrivateScreen.css\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { flushAuthData } from \"../../store/UserSlice\";\r\nimport LeftSideBar from \"../dashboard/LeftSideBar\";\r\nimport HeaderComp from \"../dashboard/HeaderComp\";\r\nimport DashboardComp from \"../dashboard/DashboardComp\";\r\n\r\n\r\nconst PrivateScreen = ({history}) => {\r\n  const [error, setError] = useState(\"\");\r\n  const [privateData, setPrivateData] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(state=>state.userAuth.user);\r\n  const logout = async (e)=>{\r\n    e.preventDefault();\r\n    dispatch(flushAuthData());\r\n    history.push(\"/login\");\r\n  }\r\n  \r\n  return error ? (\r\n    <span className=\"error-message\">{error}</span>\r\n  ) : (\r\n    <div className=\"dashboard_page\">\r\n        <HeaderComp />\r\n        <div className=\"dashboard_flex_row\">\r\n            <LeftSideBar />\r\n            <div className='dashboard_comp'>\r\n              <DashboardComp />\r\n            </div>\r\n           \r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateScreen;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./LoginScreen.css\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { getAuthFetch } from \"../../store/UserSlice\";\r\n\r\n\r\nconst LoginScreen = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  //const user = useSelector(state=>state.userAuth.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const loginHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const data  = {email,password}\r\n      dispatch(getAuthFetch(data))\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <form onSubmit={loginHandler} className=\"login-screen__form\">\r\n        <h3 className=\"login-screen__title\">Login</h3>\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            id=\"email\"\r\n            placeholder=\"Email address\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n            tabIndex={1}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">\r\n            Password:{\" \"}\r\n            <Link to=\"/forgotpassword\" className=\"login-screen__forgotpassword\">\r\n              Forgot Password?\r\n            </Link>\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            autoComplete=\"true\"\r\n            placeholder=\"Enter password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n            tabIndex={2}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Login\r\n        </button>\r\n\r\n        <span className=\"login-screen__subtext\">\r\n          Don't have an account? <Link to=\"/register\">Register</Link>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./RegisterScreen.css\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { getAuthFetch, setUserDetails } from \"../../store/UserSlice\";\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const user = useSelector(state=>state.userAuth.user);\r\n  const dispatch = useDispatch();\r\n  const registerHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    if (password !== confirmpassword) {\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    try {\r\n      \r\n      const { data } = await axios.post(\r\n        \"/api/auth/register\",\r\n        {\r\n          username,\r\n          email,\r\n          password,\r\n        },\r\n        config\r\n      );\r\n\r\n      dispatch(setUserDetails(data.data))\r\n\r\n      \r\n\r\n      localStorage.setItem(\"authToken\", data.token);\r\n\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-screen\">\r\n      <form onSubmit={registerHandler} className=\"register-screen__form\">\r\n        <h3 className=\"register-screen__title\">Register</h3>\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            id=\"name\"\r\n            placeholder=\"Enter username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            id=\"email\"\r\n            placeholder=\"Email address\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            autoComplete=\"true\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmpassword\">Confirm Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"confirmpassword\"\r\n            autoComplete=\"true\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmpassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Register\r\n        </button>\r\n\r\n        <span className=\"register-screen__subtext\">\r\n          Already have an account? <Link to=\"/login\">Login</Link>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import axios from 'axios';\r\nimport { endPoint } from '../../utils/endPoint';\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  userLoginApi: async function (payload) {\r\n    return axios.request({\r\n      method: 'post',\r\n      url: `${endPoint}auth/login`,\r\n      data: payload,\r\n    })\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .catch((error) => {\r\n        return error.response;\r\n      });\r\n  },\r\n\r\n  userForgotPassword: async function (payload) {\r\n    var data = JSON.stringify({\r\n      \"email\": payload\r\n    });\r\n    return axios.request({\r\n      method: 'post',\r\n      url: `${endPoint}auth/forgotpassword`,\r\n      data: data,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res)\r\n        return res.data;\r\n\r\n      })\r\n      .catch((error) => {\r\n        return error.response;\r\n      });\r\n  },\r\n  userFetch: async function (payload) {\r\n\r\n    return axios.request({\r\n      method: 'get',\r\n      url: `${endPoint}private/user/${payload}`,\r\n    })\r\n      .then((res) => {\r\n        console.log(res)\r\n        return res.data;\r\n\r\n      })\r\n      .catch((error) => {\r\n        return error.response;\r\n      });\r\n  },\r\n  userResetPassword: async function (payload) {\r\n    var data = JSON.stringify({\r\n      \"password\": payload.password\r\n    });\r\n    return axios.request({\r\n      method: 'put',\r\n      url: `${endPoint}auth/passwordreset/${payload.resetToken}`,\r\n      data: data,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res)\r\n        return res.data;\r\n\r\n      })\r\n      .catch((error) => {\r\n        return error.response;\r\n      });\r\n  },\r\n  userEmailVerify: async function (payload) {\r\n    return axios.request({\r\n      method: 'put',\r\n      url: `${endPoint}auth/email-verify/${payload}`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept, Authorization',\r\n        'Access-Control-Request-Method': 'PUT',\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res)\r\n        return res.data;\r\n      })\r\n      .catch((error) => {\r\n        return error.response;\r\n      });\r\n  }\r\n\r\n\r\n};","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./ForgotPasswordScreen.css\";\r\nimport UserService from \"../../service/api/UserService\"\r\nconst ForgotPasswordScreen = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const {userForgotPassword} = UserService;\r\n\r\n  const forgotPasswordHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n   \r\n    try {\r\n\r\n      userForgotPassword(email)\r\n      .then((res)=>{\r\n        console.log(res)\r\n        setSuccess(res.data);\r\n      })\r\n      \r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setEmail(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"forgotpassword-screen\">\r\n      <form\r\n        onSubmit={forgotPasswordHandler}\r\n        className=\"forgotpassword-screen__form\"\r\n      >\r\n        <h3 className=\"forgotpassword-screen__title\">Forgot Password</h3>\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n        {success && <span className=\"success-message\">{success}</span>}\r\n        <div className=\"form-group\">\r\n          <p className=\"forgotpassword-screen__subtext\">\r\n            Please enter the email address you register your account with. We\r\n            will send you reset password confirmation to this email\r\n          </p>\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            id=\"email\"\r\n            placeholder=\"Email address\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Send Email\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordScreen;\r\n","import React, { useState,useEffect } from \"react\";\r\nimport { Link,useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport UserService from \"../../service/api/UserService\";\r\nimport \"./ResetPasswordScreen.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ResetPasswordScreen = ({ history, match }) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const {userResetPassword,userFetch} = UserService;\r\n  const user = useSelector(state=>state.userAuth);\r\n  const [user_data, setuser_data] = useState({})\r\n  const {resetToken} = useParams();\r\n  \r\n\r\n  const resetPasswordHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      return setError(\"Passwords don't match\");\r\n    }\r\n\r\n    try {\r\n      const payload = {\r\n        \"resetToken\":resetToken,\r\n        \"password\":password\r\n      }\r\n        \r\n      userResetPassword(payload)\r\n      .then((res)=>{\r\n        if(res.success){\r\n          setSuccess(res.data);\r\n        }\r\n      })\r\n\r\n      \r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"resetpassword-screen\">\r\n      <form\r\n        onSubmit={resetPasswordHandler}\r\n        className=\"resetpassword-screen__form\"\r\n      >\r\n        <h3 className=\"resetpassword-screen__title\">Forgot Password</h3>\r\n        {error && <span className=\"error-message\">{error} </span>}\r\n        {success && (\r\n          <span className=\"success-message\">\r\n            {success} <Link to=\"/login\">Login</Link>\r\n          </span>\r\n        )}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            placeholder=\"Enter new password\"\r\n            autoComplete=\"true\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmpassword\">Confirm New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"confirmpassword\"\r\n            placeholder=\"Confirm new password\"\r\n            autoComplete=\"true\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordScreen;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\";\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport NewsService from '../../service/api/NewsService';\r\nimport Select from 'react-select';\r\nfunction AddPostComp() {\r\n    const history = useHistory();\r\n\r\n    const { newsAdd } = NewsService;\r\n    const [image, setimage] = useState(\"\");\r\n\r\n\r\n\r\n    const options = [\r\n        { value: 'chocolate', label: 'Chocolate' },\r\n        { value: 'strawberry', label: 'Strawberry' },\r\n        { value: 'vanilla', label: 'Vanilla' },\r\n    ];\r\n    const [tags, settags] = useState([]);\r\n    const [news_data, setnews_data] = useState({});\r\n\r\n\r\n\r\n    const { control, register, handleSubmit, reset, getValues, setValue, watch, formState: { errors } } = useForm(\r\n    );\r\n\r\n    const [temp_image_link, settemp_image_link] = useState(\"\")\r\n\r\n    const { fields, append, remove } = useFieldArray({\r\n        control,\r\n        name: \"insight_arr\"\r\n    });\r\n\r\n\r\n\r\n    const onSubmit = data => {\r\n\r\n        const res = {\r\n            \"title\": data.title,\r\n            \"content\": data.content,\r\n            \"form_link\": data.form_link,\r\n            \"read_more_link\": data.read_more_link,\r\n            \"timestamp\": Date.now(),\r\n            \"author\": \"shivam\",\r\n            \"image\": data?.image ? data?.image : \"https://yaffa-cdn.s3.amazonaws.com/yaffadsp/images/dmImage/SourceImage/news-corp-359.jpg\",\r\n            \"views\": 1,\r\n            \"tags\": tags,\r\n            \"addAt\": Date.now(),\r\n            \"updatedAt\": Date.now(),\r\n            \"poll_user_responses\": [],\r\n            \"poll_title\": data.poll_title,\r\n            \"news_type\": data.news_type,\r\n            \"insight_arr\": fields\r\n        }\r\n        EditNewsFun(res)\r\n        //console.log(res)\r\n        reset()\r\n        history.push(\"/\")\r\n    };\r\n\r\n\r\n    const EditNewsFun = async (data) => {\r\n        // if (!image) { alert(\"Please attach image...\") }\r\n\r\n        // if (image) {\r\n        //     const res = await newsAdd(data);\r\n        //     console.log(res, \"RES\");\r\n        // }\r\n\r\n        const res = await newsAdd(data);\r\n             console.log(res, \"RES\");\r\n    }\r\n    function encodeImageFileAsURL(file) {\r\n\r\n        var reader = new FileReader();\r\n        reader.onloadend = function () {\r\n            const imagebase64 = reader.result;\r\n            setimage(imagebase64)\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n    const uploadImage = (file) => {\r\n        const data = new FormData()\r\n        data.append(\"file\", file)\r\n        data.append(\"upload_preset\", \"tutorial\")\r\n        data.append(\"cloud_name\", \"breellz\")\r\n        fetch(\"CLOUDINARY_URL=cloudinary://254498432442583:qlgePH-Lq0iMY_A-DJlZh_N-cc4@dtyoyswcx\", {\r\n            method: \"post\",\r\n            body: data\r\n        })\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setimage(data.url)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const subscription = watch((value, { name, type }) => console.log(value, name, type));\r\n        return () => subscription.unsubscribe();\r\n    }, [watch]);\r\n    const watchAllFields = watch();\r\n\r\n    const myStyle={\r\n\r\n        width:'20%',\r\n        height:'200px',\r\n    };\r\n    return (\r\n        <div className='add_post_form'>\r\n            <div className='add_post_form_head'>\r\n                <h2>Add Post</h2>\r\n            </div>\r\n\r\n\r\n            <div className='add_post_form'>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className='post_form_comp'>\r\n                        <label>Title</label>\r\n                        <input {...register(\"title\", { required: true })} />\r\n                        {errors.title && <span className='error'>Title is required</span>}\r\n                    </div>\r\n\r\n                    <div className='post_form_comp'>\r\n                        <label>Description</label>\r\n                        <input {...register(\"content\", { required: true })} />\r\n                        {errors.content && <span className='error'>Description field is required</span>}\r\n                    </div>\r\n                    <div className='post_form_comp'>\r\n                        <label>Form Link (optional)</label>\r\n                        <input {...register(\"form_link\", { required: false })} />\r\n\r\n                    </div>\r\n                    <div className='post_form_comp'>\r\n                        <label>Read More Link </label>\r\n                        <input {...register(\"read_more_link\", { required: false })} />\r\n                        {errors.read_more_link && <span className='error'>Read More Link field is required</span>}\r\n                    </div>\r\n                    <div className='post_form_comp'>\r\n                        <label>News Type </label>\r\n                        <select {...register(\"news_type\", { required: false })}  >\r\n                            <option value=\"feed\">feed</option>\r\n                            <option value=\"slide\">slide</option>\r\n                            <option value=\"insight\">insight</option>\r\n                        </select>\r\n                        {errors.news_type && <span className='error'>News Type field is required</span>}\r\n\r\n                    </div>\r\n                    {watchAllFields.news_type === \"insight\" && <div className='post_form_comp'>\r\n                        <label>Insight Images Link </label>\r\n                        <input type=\"text\" onChange={(e)=>settemp_image_link(e.target.value)} value={temp_image_link} placeholder='Image Link'/>\r\n                        <ul>\r\n                            {fields.map((item, index) => (\r\n                                <li key={item.id} className='post_form_comp flex_row'>\r\n                                    <p>{index+1}  </p>\r\n                                    <img src={fields[index].image} style={{width:100,height:100,marginBottom:5}}/>\r\n                                    <button  className='dynamic_button' type=\"button\" onClick={() => remove(index)}>Delete</button>\r\n                                </li>\r\n                            ))}\r\n                            <button\r\n                                className='dynamic_button'\r\n                                type=\"button\"\r\n                                onClick={() => {append({_id:Date.now()+\"image\", image: temp_image_link });settemp_image_link(\"\")}}\r\n                            >\r\n                                Add \r\n                            </button>\r\n                        </ul>\r\n\r\n\r\n                        {errors.news_type && <span className='error'>News Type field is required</span>}\r\n\r\n                    </div>}\r\n\r\n\r\n                    <div className='post_form_comp'>\r\n                        <label>Poll Title ( IF THIS IS FOR POLL)</label>\r\n                        <input {...register(\"poll_title\", { required: false })} />\r\n                        {errors.poll_title && <span className='error'>Poll Title field is required</span>}\r\n                    </div>\r\n                    <div className='post_form_comp'>\r\n                        <label>Image</label>\r\n                        {/* <div className='dashboard_articles_comp_center articles_comp'>\r\n                            <img src={image} />\r\n                        </div>\r\n\r\n                        <input type=\"file\" accept=\"image/jpeg, image/png\" onChange={(e) => encodeImageFileAsURL(e.target.files[0])} /> */}\r\n                        <input {...register(\"image\", { required: false })} />\r\n                        {errors.image && <span className='error'>image Link field is required</span>}\r\n\r\n                    </div>\r\n                    <div className='post_form_comp'>\r\n                        <label>Tags</label>\r\n                        <Select\r\n                            defaultValue={tags}\r\n                            onChange={settags}\r\n                            options={options}\r\n                            isMulti={true}\r\n\r\n                            isSearchable={true}\r\n                        />\r\n\r\n                    </div>\r\n\r\n\r\n                    <input type=\"submit\" className='button' />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPostComp\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./PrivateScreen.css\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { flushAuthData } from \"../../store/UserSlice\";\r\nimport LeftSideBar from \"../dashboard/LeftSideBar\";\r\nimport HeaderComp from \"../dashboard/HeaderComp\";\r\nimport DashboardComp from \"../dashboard/DashboardComp\";\r\nimport AddPostComp from \"../dashboard/AddPostComp\";\r\n\r\n\r\nconst AddPostScreen = ({history}) => {\r\n  \r\n  const [error, setError] = useState(\"\");\r\n  const [privateData, setPrivateData] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(state=>state.userAuth.user);\r\n  const logout = async (e)=>{\r\n    e.preventDefault();\r\n    dispatch(flushAuthData());\r\n    history.push(\"/login\");\r\n  }\r\n  \r\n  return error ? (\r\n    <span className=\"error-message\">{error}</span>\r\n  ) : (\r\n    <div className=\"dashboard_page\">\r\n        <HeaderComp />\r\n        <div className=\"dashboard_flex_row\">\r\n            <LeftSideBar/>\r\n            \r\n            <div className='dashboard_comp'>\r\n                <AddPostComp />\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPostScreen;\r\n","import React, { useRef } from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\nfunction AddSliderComp() {\r\n    const { register, handleSubmit,reset, watch, formState: { errors } } = useForm();\r\n    const onSubmit = data => {\r\n        console.log(data)\r\n        reset()\r\n    };\r\n    return (\r\n        <div className='add_post_form'>\r\n            <div className='add_post_form_head'>\r\n                <h2>Add Slide</h2>\r\n            </div>\r\n\r\n            <div className='add_post_form'>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className='post_form_comp'>\r\n                        <label>Title</label>\r\n                        <input {...register(\"title\", { required: true })} />\r\n                        {errors.title && <span className='error'>Title is required</span>}\r\n                    </div>\r\n\r\n                    <div className='post_form_comp'>\r\n                        <label>Description</label>\r\n                        <input {...register(\"content\", { required: true })} />\r\n                        {errors.content && <span  className='error'>Description field is required</span>}\r\n                    </div>\r\n                    <div className='post_form_comp'>\r\n                        <label>Description</label>\r\n                        <input type=\"file\" {...register(\"image\", { required: true })} />\r\n                        {errors.image && <span  className='error'>Image field is required</span>}\r\n                    </div>\r\n                    \r\n\r\n                    <input type=\"submit\" className='button'/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddSliderComp","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./PrivateScreen.css\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { flushAuthData } from \"../../store/UserSlice\";\r\nimport LeftSideBar from \"../dashboard/LeftSideBar\";\r\nimport HeaderComp from \"../dashboard/HeaderComp\";\r\nimport DashboardComp from \"../dashboard/DashboardComp\";\r\nimport AddPostComp from \"../dashboard/AddPostComp\";\r\nimport AddSliderComp from \"../dashboard/AddSliderComp\";\r\n\r\n\r\nconst AddSliderScreen = ({history}) => {\r\n  const [error, setError] = useState(\"\");\r\n  const [privateData, setPrivateData] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(state=>state.userAuth.user);\r\n  const logout = async (e)=>{\r\n    e.preventDefault();\r\n    dispatch(flushAuthData());\r\n    history.push(\"/login\");\r\n  }\r\n  \r\n  return error ? (\r\n    <span className=\"error-message\">{error}</span>\r\n  ) : (\r\n    <div className=\"dashboard_page\">\r\n        <HeaderComp />\r\n        <div className=\"dashboard_flex_row\">\r\n            <LeftSideBar />\r\n            \r\n            <div className='dashboard_comp'>\r\n                <AddSliderComp />\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddSliderScreen;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\";\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport NewsService from '../../service/api/NewsService';\r\nimport Select from 'react-select';\r\nfunction EditPostComp() {\r\n    const history = useHistory();\r\n\r\n    const { newsEdit, newsGetById } = NewsService;\r\n    const { newsId } = useParams();\r\n    const [image, setimage] = useState(\"\");\r\n\r\n    const [temp_image_link, settemp_image_link] = useState(\"\");\r\n\r\n    const [options, setoptions] = useState([{ value: 'chocolate', label: 'Chocolate' },\r\n    { value: 'strawberry', label: 'Strawberry' },\r\n    { value: 'vanilla', label: 'Vanilla' },])\r\n\r\n    \r\n    const [tags, settags] = useState([]);\r\n    const [news_data, setnews_data] = useState({});\r\n    useEffect(() => {\r\n        newsGetById(newsId)\r\n            .then(item => {\r\n                setnews_data(item.data);\r\n                settags(item.data.tags)\r\n                setimage(item.data.image)\r\n               \r\n            })\r\n    }, [newsId])\r\n\r\n\r\n   \r\n    const { control, register, handleSubmit, reset, getValues, setValue, watch, formState: { errors } } = useForm({\r\n        defaultValues:news_data,\r\n        insight_arr: news_data?.insight_arr\r\n    }\r\n        );\r\n    \r\n        const { fields, append, remove } = useFieldArray({\r\n            control,\r\n            name: \"insight_arr\",\r\n        });\r\n        \r\n        useEffect(() => {\r\n            reset({\r\n              insight_arr:news_data?.insight_arr\r\n            });\r\n          }, [news_data]);\r\n\r\n    useEffect(() => {\r\n        reset(news_data);\r\n    }, [news_data]);\r\n\r\n\r\n    const onSubmit = data => {\r\n\r\n        console.log(data,\"------\")\r\n        const res = {\r\n            \"title\": data.title,\r\n            \"content\": data.content,\r\n            \"form_link\":data.form_link,\r\n            \"read_more_link\":data.read_more_link,\r\n            \"timestamp\": Date.now(),\r\n            \"author\": \"shivam\",\r\n            \"image\": data?.image ? data?.image : \"https://yaffa-cdn.s3.amazonaws.com/yaffadsp/images/dmImage/SourceImage/news-corp-359.jpg\",\r\n            \"views\": 1,\r\n            \"tags\":tags,\r\n            \"addAt\": Date.now(),\r\n            \"updatedAt\": Date.now(),\r\n            \"poll_user_responses\":[],\r\n            \"poll_title\":data.poll_title,\r\n            \"news_type\":data.news_type,\r\n            \"insight_arr\": fields\r\n        }\r\n        EditNewsFun(res)\r\n        //console.log(res)\r\n        reset()\r\n        \r\n    };\r\n\r\n\r\n    const EditNewsFun = async (data) => {\r\n        // if (!image) { alert(\"Please attach image...\") }\r\n\r\n        // if (image) {\r\n        //     const res = await newsEdit(data);\r\n        //     console.log(res, \"RES\");\r\n        // }\r\n\r\n        // console.log(data,\"->>>>>>>>\")\r\n\r\n        const res = await newsEdit(data,newsId);\r\n             console.log(res, \"RES\");\r\n             history.push(\"/\")\r\n    }\r\n    function encodeImageFileAsURL(file) {\r\n\r\n        var reader = new FileReader();\r\n        reader.onloadend = function () {\r\n            const imagebase64 = reader.result;\r\n            setimage(imagebase64)\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n    const uploadImage = (file) => {\r\n        const data = new FormData()\r\n        data.append(\"file\", file)\r\n        data.append(\"upload_preset\", \"tutorial\")\r\n        data.append(\"cloud_name\", \"breellz\")\r\n        fetch(\"CLOUDINARY_URL=cloudinary://254498432442583:qlgePH-Lq0iMY_A-DJlZh_N-cc4@dtyoyswcx\", {\r\n            method: \"post\",\r\n            body: data\r\n        })\r\n        .then(resp => resp.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            setimage(data.url)\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const subscription = watch((value, { name, type }) => console.log(value, name, type));\r\n        return () => subscription.unsubscribe();\r\n    }, [watch]);\r\n    const watchAllFields = watch();\r\n\r\n\r\n\r\n    return (\r\n        <div className='add_post_form'>\r\n            <div className='add_post_form_head'>\r\n                <h2>Edit Post</h2>\r\n            </div>\r\n\r\n            <div className='add_post_form'>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className='post_form_comp'>\r\n                        <label>Title</label>\r\n                        <input {...register(\"title\", { required: true })} />\r\n                        {errors.title && <span className='error'>Title is required</span>}\r\n                    </div>\r\n\r\n                    <div className='post_form_comp'>\r\n                        <label>Description</label>\r\n                        <input {...register(\"content\", { required: true })} />\r\n                        {errors.content && <span className='error'>Description field is required</span>}\r\n                    </div>\r\n                    <div className='post_form_comp'>\r\n                        <label>Form Link (optional)</label>\r\n                        <input {...register(\"form_link\", { required: false })} />\r\n                        \r\n                    </div>\r\n                    <div className='post_form_comp'>\r\n                        <label>Read More Link </label>\r\n                        <input {...register(\"read_more_link\", { required: false })} />\r\n                        {errors.read_more_link && <span className='error'>Read More Link field is required</span>}\r\n                    </div>\r\n                    <div className='post_form_comp'>\r\n                        <label>News Type </label>\r\n                        <select {...register(\"news_type\", { required: false })}  >\r\n                            <option value=\"feed\">feed</option>\r\n                            <option value=\"slide\">slide</option>\r\n                            <option value=\"insight\">insight</option>\r\n                        </select>\r\n                        {errors.news_type && <span className='error'>News Type field is required</span>}\r\n\r\n                    </div>\r\n                     {watchAllFields.news_type === \"insight\" && <div className='post_form_comp'>\r\n                        <label>Insight Images Link </label>\r\n                        <input type=\"text\" onChange={(e)=>settemp_image_link(e.target.value)} value={temp_image_link} placeholder='Image Link'/>\r\n                        <ul>\r\n                            {fields.map((item, index) => (\r\n                                <li key={item.id} className='post_form_comp flex_row'>\r\n                                    <p>{index+1}  </p>\r\n                                    <img src={fields[index].image} style={{width:100,height:100,marginBottom:5}}/>\r\n                                    <button  className='dynamic_button' type=\"button\" onClick={() => remove(index)}>Delete</button>\r\n                                </li>\r\n                            ))}\r\n                            <button\r\n                                className='dynamic_button'\r\n                                type=\"button\"\r\n                                onClick={() => {append({ image: temp_image_link });settemp_image_link(\"\")}}\r\n                            >\r\n                                Add \r\n                            </button>\r\n                        </ul>\r\n\r\n\r\n                        {errors.news_type && <span className='error'>News Type field is required</span>}\r\n\r\n                    </div>}\r\n                    <div className='post_form_comp'>\r\n                        <label>Poll Title ( IF THIS IS FOR POLL)</label>\r\n                        <input {...register(\"poll_title\", { required: false })} />\r\n                        {errors.poll_title && <span className='error'>Poll Title field is required</span>}\r\n                    </div>\r\n\r\n                    \r\n\r\n                    <div className='post_form_comp'>\r\n                        <label>Image</label>\r\n                        {/* <div className='dashboard_articles_comp_center articles_comp'>\r\n                            <img src={image} />\r\n                        </div>\r\n\r\n                        <input type=\"file\" accept=\"image/jpeg, image/png\" onChange={(e) => encodeImageFileAsURL(e.target.files[0])} /> */}\r\n                        <input {...register(\"image\", { required: false })} />\r\n                        {errors.image && <span className='error'>image Link field is required</span>}\r\n\r\n                    </div>\r\n                    <div className='post_form_comp'>\r\n                    <label>Tags</label>\r\n                    <Select\r\n                        defaultValue={tags}\r\n                        onChange={settags}\r\n                        options={options}\r\n                        isMulti={true}\r\n                        value={tags}\r\n                        \r\n                        isSearchable={true}\r\n                    />\r\n\r\n                    </div>\r\n                   \r\n\r\n                    <input type=\"submit\" className='button' />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditPostComp","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./PrivateScreen.css\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { flushAuthData } from \"../../store/UserSlice\";\r\nimport LeftSideBar from \"../dashboard/LeftSideBar\";\r\nimport HeaderComp from \"../dashboard/HeaderComp\";\r\nimport DashboardComp from \"../dashboard/DashboardComp\";\r\nimport EditPostComp from \"../dashboard/EditPostComp\";\r\n\r\n\r\nconst EditPostScreen = ({history}) => {\r\n  const [error, setError] = useState(\"\");\r\n  const [privateData, setPrivateData] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(state=>state.userAuth.user);\r\n    \r\n  \r\n  return error ? (\r\n    <span className=\"error-message\">{error}</span>\r\n  ) : (\r\n    <div className=\"dashboard_page\">\r\n        <HeaderComp />\r\n        <div className=\"dashboard_flex_row\">\r\n            <LeftSideBar />\r\n            \r\n            <div className='dashboard_comp'>\r\n                <EditPostComp />\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPostScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport UserService from \"../../service/api/UserService\";\r\nimport \"./ResetPasswordScreen.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst EmailVerifyScreen = ({ history, match }) => {\r\n\r\n    const { emailToken } = useParams();\r\n    const { userEmailVerify } = UserService;\r\n    const [success, setSuccess] = useState(\"\");\r\n    const [Error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n\r\n    const verify = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const res = await userEmailVerify(emailToken)            \r\n            if (res.success) {\r\n                setSuccess(res.data)\r\n                window.alert(res.data)\r\n            } else {\r\n                setError(res.data.error)\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            setError(error.response?.data?.error);\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"resetpassword-screen\">\r\n            <div\r\n                className=\"resetpassword-screen__form\"\r\n            >\r\n                <h3 className=\"resetpassword-screen__title\">Email Verification</h3>\r\n                {success && (\r\n                    <p className=\"success-message\">\r\n                        {success} \r\n                    </p>\r\n                )}\r\n                {(Error && !success) && <p className=\"error-message\"> {Error} </p>}\r\n                \r\n               {(!Error || !success) && <button type=\"submit\" onClick={verify} className=\"btn btn-primary\">\r\n                    Click Here to verify\r\n                </button>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmailVerifyScreen;\r\n","import { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\n// Routing\r\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\r\n\r\n// Screens\r\nimport PrivateScreen from \"./components/screens/PrivateScreen\";\r\nimport LoginScreen from \"./components/screens/LoginScreen\";\r\nimport RegisterScreen from \"./components/screens/RegisterScreen\";\r\nimport ForgotPasswordScreen from \"./components/screens/ForgotPasswordScreen\";\r\nimport ResetPasswordScreen from \"./components/screens/ResetPasswordScreen\";\r\nimport AddPostScreen from \"./components/screens/AddPostScreen\";\r\nimport AddSliderScreen from \"./components/screens/AddSliderScreen\";\r\nimport EditPostScreen from \"./components/screens/EditPostScreen\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport EmailVerifyScreen from \"./components/screens/EmailVerifyScreen\";\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n  const user = useSelector(state=>state.userAuth.user)\r\n  axios.interceptors.request.use(function (config) {\r\n    // Do something before request is sent\r\n    if(user){\r\n      config.headers.Authorization = `Bearer ${user.token}`;\r\n    }\r\n   \r\n\r\n    return config;\r\n  }, function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  });\r\n  axios.interceptors.response.use(function (config) {\r\n    // Do something before request is sent\r\n    if(user){\r\n      config.headers.Authorization = `Bearer ${user.token}`;\r\n    }\r\n    return config;\r\n  }, function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  });\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n          <PrivateRoute exact path=\"/add-post\" component={AddPostScreen} />\r\n          <PrivateRoute exact path=\"/edit-post/:newsId\" component={EditPostScreen} />\r\n          <PrivateRoute exact path=\"/add-slide\" component={AddSliderScreen} />\r\n          \r\n          <PrivateRoute exact path=\"/\" component={PrivateScreen} />\r\n          <Route exact path=\"/login\" component={LoginScreen} />\r\n          <Route exact path=\"/register\" component={RegisterScreen} />\r\n          <Route\r\n            exact\r\n            path=\"/forgotpassword\"\r\n            component={ForgotPasswordScreen}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/passwordreset/:resetToken\"\r\n            component={ResetPasswordScreen}\r\n          />\r\n           <Route\r\n            exact\r\n            path=\"/email-verify/:emailToken\"\r\n            component={EmailVerifyScreen}\r\n          />\r\n      </div>\r\n      \r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport UserSlice from \"./UserSlice\";\r\nconst rootReducer = combineReducers({\r\n  userAuth: UserSlice,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  version: 1,\r\n  // persist only the requied part\r\n  whitelist: [\"userAuth\"],\r\n};\r\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n","import { call, put, takeEvery } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { setUserDetails,getAuthSuccess } from '../../store/UserSlice';\r\nimport { endPoint } from '../../utils/endPoint';\r\n\r\nfunction PutUserData(payload){\r\n    return axios.request({\r\n        method: 'post',\r\n        url: `${endPoint}auth/login`,\r\n        data: payload,\r\n    });\r\n}\r\n    \r\nfunction* workerGetUserFetch(action){\r\n    const response = yield call(PutUserData,action.payload);\r\n    yield put(setUserDetails(response.data.data))\r\n    yield put(getAuthSuccess())\r\n}\r\n\r\nfunction* userSaga(){\r\n    yield takeEvery(\"user/getAuthFetch\",workerGetUserFetch)\r\n}\r\n\r\nexport default userSaga;","import { spawn } from 'redux-saga/effects';\r\nimport userSaga from './userSaga';\r\n\r\nexport function* rootSaga() {\r\n    yield spawn(userSaga);\r\n   \r\n}\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { persistedReducer } from './store/RootReducer';\r\nimport { rootSaga } from './service/saga/RootSaga';\r\nconst saga = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n  reducer:persistedReducer,\r\n  devTools: true,\r\n  middleware:[saga]\r\n})\r\n\r\nsaga.run(rootSaga)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistStore(store)}>\r\n    <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}