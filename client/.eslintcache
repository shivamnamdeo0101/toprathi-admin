[{"C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\index.js":"1","C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\App.js":"2","C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\reportWebVitals.js":"3","C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\components\\routing\\PrivateRoute.js":"4","C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\components\\screens\\PrivateScreen.js":"5","C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\components\\screens\\ForgotPasswordScreen.js":"6","C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\components\\screens\\RegisterScreen.js":"7","C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\components\\screens\\ResetPasswordScreen.js":"8","C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\components\\screens\\LoginScreen.js":"9","C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\store\\UserSlice.js":"10","C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\service\\saga\\userSaga.js":"11","C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\utils\\endPoint.js":"12","C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\service\\api\\UserService.js":"13","C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\store\\RootReducer.js":"14","C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\service\\saga\\RootSaga.js":"15"},{"size":1130,"mtime":1663690538624,"results":"16","hashOfConfig":"17"},{"size":1133,"mtime":1663079054060,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1662982119122,"results":"19","hashOfConfig":"17"},{"size":542,"mtime":1663079677222,"results":"20","hashOfConfig":"17"},{"size":830,"mtime":1663075473989,"results":"21","hashOfConfig":"17"},{"size":1904,"mtime":1663071103135,"results":"22","hashOfConfig":"17"},{"size":3567,"mtime":1663694335325,"results":"23","hashOfConfig":"17"},{"size":2658,"mtime":1662982119120,"results":"24","hashOfConfig":"17"},{"size":2396,"mtime":1663086010284,"results":"25","hashOfConfig":"17"},{"size":886,"mtime":1663078985285,"results":"26","hashOfConfig":"17"},{"size":681,"mtime":1663690749523,"results":"27","hashOfConfig":"17"},{"size":32,"mtime":1663070587341,"results":"28","hashOfConfig":"17"},{"size":503,"mtime":1663059533387,"results":"29","hashOfConfig":"17"},{"size":473,"mtime":1663687098199,"results":"30","hashOfConfig":"17"},{"size":152,"mtime":1663690751217,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"7wkxdk",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\index.js",[],["68","69"],"C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\App.js",[],"C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\reportWebVitals.js",[],"C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\components\\routing\\PrivateRoute.js",["70"],"import { useLocation, Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const location = useLocation();\r\n  const user = useSelector((state) => state.userAuth.user);\r\n  \r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        Object.keys(user).length !==0 ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\components\\screens\\PrivateScreen.js",["71","72","73","74"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./PrivateScreen.css\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { flushAuthData } from \"../../store/UserSlice\";\r\n\r\nconst PrivateScreen = ({history}) => {\r\n  const [error, setError] = useState(\"\");\r\n  const [privateData, setPrivateData] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(state=>state.userAuth.user);\r\n  const logout = async (e)=>{\r\n    e.preventDefault();\r\n    dispatch(flushAuthData());\r\n    history.push(\"/login\");\r\n  }\r\n  \r\n  return error ? (\r\n    <span className=\"error-message\">{error}</span>\r\n  ) : (\r\n    <div>{privateData}\r\n      <button onClick={logout}>Logout\r\n      </button>\r\n\r\n      <p>{JSON.stringify(user)}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateScreen;\r\n","C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\components\\screens\\ForgotPasswordScreen.js",[],"C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\components\\screens\\RegisterScreen.js",["75","76"],"import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./RegisterScreen.css\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { getAuthFetch, setUserDetails } from \"../../store/UserSlice\";\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const user = useSelector(state=>state.userAuth.user);\r\n  const dispatch = useDispatch();\r\n  const registerHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    if (password !== confirmpassword) {\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    try {\r\n      \r\n      const { data } = await axios.post(\r\n        \"/api/auth/register\",\r\n        {\r\n          username,\r\n          email,\r\n          password,\r\n        },\r\n        config\r\n      );\r\n\r\n      dispatch(setUserDetails(data.data))\r\n\r\n      \r\n\r\n      localStorage.setItem(\"authToken\", data.token);\r\n\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-screen\">\r\n      <form onSubmit={registerHandler} className=\"register-screen__form\">\r\n        <h3 className=\"register-screen__title\">Register</h3>\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            id=\"name\"\r\n            placeholder=\"Enter username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            id=\"email\"\r\n            placeholder=\"Email address\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            autoComplete=\"true\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmpassword\">Confirm Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"confirmpassword\"\r\n            autoComplete=\"true\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmpassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Register\r\n        </button>\r\n\r\n        <span className=\"register-screen__subtext\">\r\n          Already have an account? <Link to=\"/login\">Login</Link>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\components\\screens\\ResetPasswordScreen.js",[],"C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\components\\screens\\LoginScreen.js",["77","78","79"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./LoginScreen.css\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { getAuthFetch } from \"../../store/UserSlice\";\r\n\r\n\r\nconst LoginScreen = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  //const user = useSelector(state=>state.userAuth.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const loginHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const data  = {email,password}\r\n      dispatch(getAuthFetch(data))\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <form onSubmit={loginHandler} className=\"login-screen__form\">\r\n        <h3 className=\"login-screen__title\">Login</h3>\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            id=\"email\"\r\n            placeholder=\"Email address\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n            tabIndex={1}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">\r\n            Password:{\" \"}\r\n            <Link to=\"/forgotpassword\" className=\"login-screen__forgotpassword\">\r\n              Forgot Password?\r\n            </Link>\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            autoComplete=\"true\"\r\n            placeholder=\"Enter password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n            tabIndex={2}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Login\r\n        </button>\r\n\r\n        <span className=\"login-screen__subtext\">\r\n          Don't have an account? <Link to=\"/register\">Register</Link>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\store\\UserSlice.js",[],"C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\service\\saga\\userSaga.js",[],"C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\utils\\endPoint.js",[],["80","81"],"C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\service\\api\\UserService.js",[],"C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\store\\RootReducer.js",[],"C:\\Users\\shinamde\\Desktop\\NARIVE\\toprathi-admin\\client\\src\\service\\saga\\RootSaga.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":5,"column":9,"nodeType":"88","messageId":"89","endLine":5,"endColumn":17},{"ruleId":"86","severity":1,"message":"90","line":1,"column":20,"nodeType":"88","messageId":"89","endLine":1,"endColumn":29},{"ruleId":"86","severity":1,"message":"91","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":13},{"ruleId":"86","severity":1,"message":"92","line":8,"column":17,"nodeType":"88","messageId":"89","endLine":8,"endColumn":25},{"ruleId":"86","severity":1,"message":"93","line":9,"column":23,"nodeType":"88","messageId":"89","endLine":9,"endColumn":37},{"ruleId":"86","severity":1,"message":"94","line":6,"column":10,"nodeType":"88","messageId":"89","endLine":6,"endColumn":22},{"ruleId":"86","severity":1,"message":"95","line":14,"column":9,"nodeType":"88","messageId":"89","endLine":14,"endColumn":13},{"ruleId":"86","severity":1,"message":"90","line":1,"column":20,"nodeType":"88","messageId":"89","endLine":1,"endColumn":29},{"ruleId":"86","severity":1,"message":"91","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":13},{"ruleId":"86","severity":1,"message":"96","line":5,"column":22,"nodeType":"88","messageId":"89","endLine":5,"endColumn":33},{"ruleId":"82","replacedBy":"97"},{"ruleId":"84","replacedBy":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'location' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","'setError' is assigned a value but never used.","'setPrivateData' is assigned a value but never used.","'getAuthFetch' is defined but never used.","'user' is assigned a value but never used.","'useSelector' is defined but never used.",["99"],["100"],"no-global-assign","no-unsafe-negation"]